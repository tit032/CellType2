{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cell Type Project Dataset I: Ephys Features\n",
    "\n",
    "The Allen Software Development Kit (Allen SDK) is a source code for processing Allen Brain Atlas data, which includes the Cell Types Database. Electrophysiologcal characterizations of human neurons can be found in the Allen Cell Types. \n",
    "\n",
    "We can download the data from Allen Cell Types Database by importing the \"Cell Types Cache\" class, which will provide a Python interface for downloading data from the database. To access the database, we will then import CellTypesApi and initialize it as 'ctc'. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from allensdk.core.cell_types_cache import CellTypesCache\n",
    "from allensdk.api.queries.cell_types_api import CellTypesApi\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "import requests\n",
    "import json\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "from scipy import stats"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The 'get_cells' method downloads the metadata of all cells in the databse. We will filter for human cells by specifying the species as 'HUMAN' and assign the output to 'human_cells'. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "ctc = CellTypesCache(manifest_file='cell_types/manifest.json')\n",
    "human_cells = ctc.get_cells(species=[CellTypesApi.HUMAN])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Importing pandas allows us to visualize the data downloaded from the database in an organized manner by allowing the conversion of the human_cells output into a dataframe. 'pd.Dataframe' converts 'human_cells' to a Pandas dataframe. Our data will be organized by subject id by using the 'set_index' method to reassign the indices of the rows in our dataframe. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reporter_status</th>\n",
       "      <th>cell_soma_location</th>\n",
       "      <th>species</th>\n",
       "      <th>name</th>\n",
       "      <th>structure_layer_name</th>\n",
       "      <th>structure_area_id</th>\n",
       "      <th>structure_area_abbrev</th>\n",
       "      <th>transgenic_line</th>\n",
       "      <th>dendrite_type</th>\n",
       "      <th>apical</th>\n",
       "      <th>reconstruction_type</th>\n",
       "      <th>disease_state</th>\n",
       "      <th>donor_id</th>\n",
       "      <th>structure_hemisphere</th>\n",
       "      <th>normalized_depth</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>525011903</th>\n",
       "      <td>None</td>\n",
       "      <td>[273.0, 354.0, 216.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.003.01.14.02</td>\n",
       "      <td>3</td>\n",
       "      <td>12113</td>\n",
       "      <td>FroL</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>intact</td>\n",
       "      <td>None</td>\n",
       "      <td>epilepsy</td>\n",
       "      <td>524848408</td>\n",
       "      <td>right</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>528642047</th>\n",
       "      <td>None</td>\n",
       "      <td>[69.0, 254.0, 96.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.009.01.02.06.05</td>\n",
       "      <td>5</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>aspiny</td>\n",
       "      <td>NA</td>\n",
       "      <td>None</td>\n",
       "      <td>epilepsy</td>\n",
       "      <td>528574320</td>\n",
       "      <td>left</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537256313</th>\n",
       "      <td>None</td>\n",
       "      <td>[322.0, 255.0, 92.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.006.01.05.02</td>\n",
       "      <td>4</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>None</td>\n",
       "      <td>epilepsy</td>\n",
       "      <td>536912860</td>\n",
       "      <td>right</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>519832676</th>\n",
       "      <td>None</td>\n",
       "      <td>[79.0, 273.0, 91.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.001.01.09.01</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>full</td>\n",
       "      <td>epilepsy</td>\n",
       "      <td>518641172</td>\n",
       "      <td>left</td>\n",
       "      <td>0.290951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>596020931</th>\n",
       "      <td>None</td>\n",
       "      <td>[66.0, 220.0, 105.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H17.06.009.11.04.02</td>\n",
       "      <td>4</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>aspiny</td>\n",
       "      <td>NA</td>\n",
       "      <td>full</td>\n",
       "      <td>tumor</td>\n",
       "      <td>595954915</td>\n",
       "      <td>left</td>\n",
       "      <td>0.497825</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          reporter_status     cell_soma_location       species  \\\n",
       "id                                                               \n",
       "525011903            None  [273.0, 354.0, 216.0]  Homo Sapiens   \n",
       "528642047            None    [69.0, 254.0, 96.0]  Homo Sapiens   \n",
       "537256313            None   [322.0, 255.0, 92.0]  Homo Sapiens   \n",
       "519832676            None    [79.0, 273.0, 91.0]  Homo Sapiens   \n",
       "596020931            None   [66.0, 220.0, 105.0]  Homo Sapiens   \n",
       "\n",
       "                             name structure_layer_name  structure_area_id  \\\n",
       "id                                                                          \n",
       "525011903     H16.03.003.01.14.02                    3              12113   \n",
       "528642047  H16.06.009.01.02.06.05                    5              12141   \n",
       "537256313     H16.03.006.01.05.02                    4              12141   \n",
       "519832676     H16.03.001.01.09.01                    3              12141   \n",
       "596020931     H17.06.009.11.04.02                    4              12141   \n",
       "\n",
       "          structure_area_abbrev transgenic_line dendrite_type     apical  \\\n",
       "id                                                                         \n",
       "525011903                  FroL                         spiny     intact   \n",
       "528642047                   MTG                        aspiny         NA   \n",
       "537256313                   MTG                         spiny  truncated   \n",
       "519832676                   MTG                         spiny  truncated   \n",
       "596020931                   MTG                        aspiny         NA   \n",
       "\n",
       "          reconstruction_type disease_state   donor_id structure_hemisphere  \\\n",
       "id                                                                            \n",
       "525011903                None      epilepsy  524848408                right   \n",
       "528642047                None      epilepsy  528574320                 left   \n",
       "537256313                None      epilepsy  536912860                right   \n",
       "519832676                full      epilepsy  518641172                 left   \n",
       "596020931                full         tumor  595954915                 left   \n",
       "\n",
       "           normalized_depth  \n",
       "id                           \n",
       "525011903               NaN  \n",
       "528642047               NaN  \n",
       "537256313               NaN  \n",
       "519832676          0.290951  \n",
       "596020931          0.497825  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting up a dataframe that contains only human cell information\n",
    "human_df = pd.DataFrame(human_cells)\n",
    "human_df = human_df.set_index('id')\n",
    "human_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since our project is interestd in hippocampal spiny neurons, we want to focus on the values under the columns 'structure_area_abbrev' and 'dendrite type'. We want these columns to contain the values 'MTG' and 'spiny,' respectively. To filter through the dataframe, we can use boolean indexing. The following lines of codes makes new dataframes from the 'human_df' dataframe where the values under our two columns of interest equals the values we want.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reporter_status</th>\n",
       "      <th>cell_soma_location</th>\n",
       "      <th>species</th>\n",
       "      <th>name</th>\n",
       "      <th>structure_layer_name</th>\n",
       "      <th>structure_area_id</th>\n",
       "      <th>structure_area_abbrev</th>\n",
       "      <th>transgenic_line</th>\n",
       "      <th>dendrite_type</th>\n",
       "      <th>apical</th>\n",
       "      <th>reconstruction_type</th>\n",
       "      <th>disease_state</th>\n",
       "      <th>donor_id</th>\n",
       "      <th>structure_hemisphere</th>\n",
       "      <th>normalized_depth</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>537256313</th>\n",
       "      <td>None</td>\n",
       "      <td>[322.0, 255.0, 92.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.006.01.05.02</td>\n",
       "      <td>4</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>None</td>\n",
       "      <td>epilepsy</td>\n",
       "      <td>536912860</td>\n",
       "      <td>right</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>519832676</th>\n",
       "      <td>None</td>\n",
       "      <td>[79.0, 273.0, 91.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.001.01.09.01</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>full</td>\n",
       "      <td>epilepsy</td>\n",
       "      <td>518641172</td>\n",
       "      <td>left</td>\n",
       "      <td>0.290951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>545608578</th>\n",
       "      <td>None</td>\n",
       "      <td>[312.0, 280.0, 89.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.010.13.06.01</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>intact</td>\n",
       "      <td>None</td>\n",
       "      <td>epilepsy</td>\n",
       "      <td>545510854</td>\n",
       "      <td>right</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>561467633</th>\n",
       "      <td>None</td>\n",
       "      <td>[79.0, 273.0, 86.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.013.12.08.05</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>None</td>\n",
       "      <td>epilepsy</td>\n",
       "      <td>561414332</td>\n",
       "      <td>left</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>528706755</th>\n",
       "      <td>None</td>\n",
       "      <td>[70.0, 260.0, 108.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.009.01.01.15.01</td>\n",
       "      <td>2</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>intact</td>\n",
       "      <td>dendrite-only</td>\n",
       "      <td>epilepsy</td>\n",
       "      <td>528574320</td>\n",
       "      <td>left</td>\n",
       "      <td>0.134667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          reporter_status    cell_soma_location       species  \\\n",
       "id                                                              \n",
       "537256313            None  [322.0, 255.0, 92.0]  Homo Sapiens   \n",
       "519832676            None   [79.0, 273.0, 91.0]  Homo Sapiens   \n",
       "545608578            None  [312.0, 280.0, 89.0]  Homo Sapiens   \n",
       "561467633            None   [79.0, 273.0, 86.0]  Homo Sapiens   \n",
       "528706755            None  [70.0, 260.0, 108.0]  Homo Sapiens   \n",
       "\n",
       "                             name structure_layer_name  structure_area_id  \\\n",
       "id                                                                          \n",
       "537256313     H16.03.006.01.05.02                    4              12141   \n",
       "519832676     H16.03.001.01.09.01                    3              12141   \n",
       "545608578     H16.03.010.13.06.01                    3              12141   \n",
       "561467633     H16.06.013.12.08.05                    3              12141   \n",
       "528706755  H16.06.009.01.01.15.01                    2              12141   \n",
       "\n",
       "          structure_area_abbrev transgenic_line dendrite_type     apical  \\\n",
       "id                                                                         \n",
       "537256313                   MTG                         spiny  truncated   \n",
       "519832676                   MTG                         spiny  truncated   \n",
       "545608578                   MTG                         spiny     intact   \n",
       "561467633                   MTG                         spiny  truncated   \n",
       "528706755                   MTG                         spiny     intact   \n",
       "\n",
       "          reconstruction_type disease_state   donor_id structure_hemisphere  \\\n",
       "id                                                                            \n",
       "537256313                None      epilepsy  536912860                right   \n",
       "519832676                full      epilepsy  518641172                 left   \n",
       "545608578                None      epilepsy  545510854                right   \n",
       "561467633                None      epilepsy  561414332                 left   \n",
       "528706755       dendrite-only      epilepsy  528574320                 left   \n",
       "\n",
       "           normalized_depth  \n",
       "id                           \n",
       "537256313               NaN  \n",
       "519832676          0.290951  \n",
       "545608578               NaN  \n",
       "561467633               NaN  \n",
       "528706755          0.134667  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#First we made a new dataframe from 'human_df' with the 'structure_area_abbrev' containing all 'MTG' values\n",
    "MTG_df = human_df[human_df['structure_area_abbrev']=='MTG']\n",
    "\n",
    "#From MTG_df, we made a new dataframe with 'dendrite_type' colunn containing all 'spiny' values\n",
    "MTG_spiny_df = MTG_df[MTG_df['dendrite_type']=='spiny']\n",
    "MTG_spiny_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we need to get the electrophysiological properties data of the cells we're interested in. This can be done by using the 'get_ephys_feature()' method on the cell types cache instance we made earlier. Like before, we converted the output into a dataframe and set the 'specimen_id' column as the index of the dataframe. Indexing both of our dataframes with 'specimen_id' will allow us to merge the two dataframes together in the next step. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>adaptation</th>\n",
       "      <th>avg_isi</th>\n",
       "      <th>electrode_0_pa</th>\n",
       "      <th>f_i_curve_slope</th>\n",
       "      <th>fast_trough_t_long_square</th>\n",
       "      <th>fast_trough_t_ramp</th>\n",
       "      <th>fast_trough_t_short_square</th>\n",
       "      <th>fast_trough_v_long_square</th>\n",
       "      <th>fast_trough_v_ramp</th>\n",
       "      <th>fast_trough_v_short_square</th>\n",
       "      <th>...</th>\n",
       "      <th>trough_t_ramp</th>\n",
       "      <th>trough_t_short_square</th>\n",
       "      <th>trough_v_long_square</th>\n",
       "      <th>trough_v_ramp</th>\n",
       "      <th>trough_v_short_square</th>\n",
       "      <th>upstroke_downstroke_ratio_long_square</th>\n",
       "      <th>upstroke_downstroke_ratio_ramp</th>\n",
       "      <th>upstroke_downstroke_ratio_short_square</th>\n",
       "      <th>vm_for_sag</th>\n",
       "      <th>vrest</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>specimen_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>529878215</th>\n",
       "      <td>NaN</td>\n",
       "      <td>134.700000</td>\n",
       "      <td>22.697498</td>\n",
       "      <td>8.335459e-02</td>\n",
       "      <td>1.187680</td>\n",
       "      <td>13.295200</td>\n",
       "      <td>1.025916</td>\n",
       "      <td>-56.375004</td>\n",
       "      <td>-57.385420</td>\n",
       "      <td>-57.431251</td>\n",
       "      <td>...</td>\n",
       "      <td>13.295680</td>\n",
       "      <td>1.134780</td>\n",
       "      <td>-56.593754</td>\n",
       "      <td>-57.739586</td>\n",
       "      <td>-74.143753</td>\n",
       "      <td>3.029695</td>\n",
       "      <td>3.061646</td>\n",
       "      <td>2.969821</td>\n",
       "      <td>-80.468750</td>\n",
       "      <td>-73.553391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>548459652</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-24.887498</td>\n",
       "      <td>-3.913630e-19</td>\n",
       "      <td>1.099840</td>\n",
       "      <td>20.650105</td>\n",
       "      <td>1.025460</td>\n",
       "      <td>-54.000000</td>\n",
       "      <td>-54.828129</td>\n",
       "      <td>-54.656254</td>\n",
       "      <td>...</td>\n",
       "      <td>20.650735</td>\n",
       "      <td>1.160940</td>\n",
       "      <td>-55.406254</td>\n",
       "      <td>-55.242191</td>\n",
       "      <td>-73.500000</td>\n",
       "      <td>2.441895</td>\n",
       "      <td>2.245653</td>\n",
       "      <td>2.231575</td>\n",
       "      <td>-84.406258</td>\n",
       "      <td>-73.056595</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>579978640</th>\n",
       "      <td>0.009770</td>\n",
       "      <td>39.044800</td>\n",
       "      <td>-46.765002</td>\n",
       "      <td>5.267857e-01</td>\n",
       "      <td>1.157840</td>\n",
       "      <td>2.551310</td>\n",
       "      <td>1.025387</td>\n",
       "      <td>-59.500000</td>\n",
       "      <td>-58.234378</td>\n",
       "      <td>-59.940975</td>\n",
       "      <td>...</td>\n",
       "      <td>2.551960</td>\n",
       "      <td>1.089851</td>\n",
       "      <td>-60.062500</td>\n",
       "      <td>-58.570314</td>\n",
       "      <td>-61.371531</td>\n",
       "      <td>2.023762</td>\n",
       "      <td>2.162878</td>\n",
       "      <td>2.006406</td>\n",
       "      <td>-93.375008</td>\n",
       "      <td>-60.277321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>439024551</th>\n",
       "      <td>-0.007898</td>\n",
       "      <td>117.816429</td>\n",
       "      <td>5.996250</td>\n",
       "      <td>1.542553e-01</td>\n",
       "      <td>1.989165</td>\n",
       "      <td>9.572025</td>\n",
       "      <td>1.028733</td>\n",
       "      <td>-47.531250</td>\n",
       "      <td>-50.359375</td>\n",
       "      <td>-65.500000</td>\n",
       "      <td>...</td>\n",
       "      <td>9.576308</td>\n",
       "      <td>1.423229</td>\n",
       "      <td>-49.406254</td>\n",
       "      <td>-52.718752</td>\n",
       "      <td>-75.273443</td>\n",
       "      <td>3.105931</td>\n",
       "      <td>3.491663</td>\n",
       "      <td>1.733896</td>\n",
       "      <td>-87.656250</td>\n",
       "      <td>-75.205559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>515188639</th>\n",
       "      <td>0.022842</td>\n",
       "      <td>68.321429</td>\n",
       "      <td>14.910000</td>\n",
       "      <td>1.714041e-01</td>\n",
       "      <td>1.081980</td>\n",
       "      <td>2.462880</td>\n",
       "      <td>1.025620</td>\n",
       "      <td>-48.437504</td>\n",
       "      <td>-46.520837</td>\n",
       "      <td>-51.406253</td>\n",
       "      <td>...</td>\n",
       "      <td>2.490433</td>\n",
       "      <td>1.479690</td>\n",
       "      <td>-53.000004</td>\n",
       "      <td>-54.645837</td>\n",
       "      <td>-64.250003</td>\n",
       "      <td>3.285760</td>\n",
       "      <td>3.363504</td>\n",
       "      <td>4.234701</td>\n",
       "      <td>-81.625008</td>\n",
       "      <td>-63.474991</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 55 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             adaptation     avg_isi  electrode_0_pa  f_i_curve_slope  \\\n",
       "specimen_id                                                            \n",
       "529878215           NaN  134.700000       22.697498     8.335459e-02   \n",
       "548459652           NaN         NaN      -24.887498    -3.913630e-19   \n",
       "579978640      0.009770   39.044800      -46.765002     5.267857e-01   \n",
       "439024551     -0.007898  117.816429        5.996250     1.542553e-01   \n",
       "515188639      0.022842   68.321429       14.910000     1.714041e-01   \n",
       "\n",
       "             fast_trough_t_long_square  fast_trough_t_ramp  \\\n",
       "specimen_id                                                  \n",
       "529878215                     1.187680           13.295200   \n",
       "548459652                     1.099840           20.650105   \n",
       "579978640                     1.157840            2.551310   \n",
       "439024551                     1.989165            9.572025   \n",
       "515188639                     1.081980            2.462880   \n",
       "\n",
       "             fast_trough_t_short_square  fast_trough_v_long_square  \\\n",
       "specimen_id                                                          \n",
       "529878215                      1.025916                 -56.375004   \n",
       "548459652                      1.025460                 -54.000000   \n",
       "579978640                      1.025387                 -59.500000   \n",
       "439024551                      1.028733                 -47.531250   \n",
       "515188639                      1.025620                 -48.437504   \n",
       "\n",
       "             fast_trough_v_ramp  fast_trough_v_short_square  ...  \\\n",
       "specimen_id                                                  ...   \n",
       "529878215            -57.385420                  -57.431251  ...   \n",
       "548459652            -54.828129                  -54.656254  ...   \n",
       "579978640            -58.234378                  -59.940975  ...   \n",
       "439024551            -50.359375                  -65.500000  ...   \n",
       "515188639            -46.520837                  -51.406253  ...   \n",
       "\n",
       "             trough_t_ramp  trough_t_short_square  trough_v_long_square  \\\n",
       "specimen_id                                                               \n",
       "529878215        13.295680               1.134780            -56.593754   \n",
       "548459652        20.650735               1.160940            -55.406254   \n",
       "579978640         2.551960               1.089851            -60.062500   \n",
       "439024551         9.576308               1.423229            -49.406254   \n",
       "515188639         2.490433               1.479690            -53.000004   \n",
       "\n",
       "             trough_v_ramp  trough_v_short_square  \\\n",
       "specimen_id                                         \n",
       "529878215       -57.739586             -74.143753   \n",
       "548459652       -55.242191             -73.500000   \n",
       "579978640       -58.570314             -61.371531   \n",
       "439024551       -52.718752             -75.273443   \n",
       "515188639       -54.645837             -64.250003   \n",
       "\n",
       "             upstroke_downstroke_ratio_long_square  \\\n",
       "specimen_id                                          \n",
       "529878215                                 3.029695   \n",
       "548459652                                 2.441895   \n",
       "579978640                                 2.023762   \n",
       "439024551                                 3.105931   \n",
       "515188639                                 3.285760   \n",
       "\n",
       "             upstroke_downstroke_ratio_ramp  \\\n",
       "specimen_id                                   \n",
       "529878215                          3.061646   \n",
       "548459652                          2.245653   \n",
       "579978640                          2.162878   \n",
       "439024551                          3.491663   \n",
       "515188639                          3.363504   \n",
       "\n",
       "             upstroke_downstroke_ratio_short_square  vm_for_sag      vrest  \n",
       "specimen_id                                                                 \n",
       "529878215                                  2.969821  -80.468750 -73.553391  \n",
       "548459652                                  2.231575  -84.406258 -73.056595  \n",
       "579978640                                  2.006406  -93.375008 -60.277321  \n",
       "439024551                                  1.733896  -87.656250 -75.205559  \n",
       "515188639                                  4.234701  -81.625008 -63.474991  \n",
       "\n",
       "[5 rows x 55 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ephys_features = pd.DataFrame(ctc.get_ephys_features()).set_index('specimen_id')\n",
    "#We want to display column names so we know which column contains the data points we are intersted in later\n",
    "ephys_features.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The two dataframes we have now are 'MTG_spiny_df' and 'ephys_features.' We are only interested in the data in 'ephys_features' that correspond with the specimen_id values in 'MTG_spiny_df.' Since we indexed both dataframes by specimen_id, we can combine the two dataframes into a new dataframe where only data entries with the same index values across the two dataframes are kept. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['reporter_status', 'cell_soma_location', 'species', 'name',\n",
      "       'structure_layer_name', 'structure_area_id', 'structure_area_abbrev',\n",
      "       'transgenic_line', 'dendrite_type', 'apical', 'reconstruction_type',\n",
      "       'disease_state', 'donor_id', 'structure_hemisphere', 'normalized_depth',\n",
      "       'adaptation', 'avg_isi', 'electrode_0_pa', 'f_i_curve_slope',\n",
      "       'fast_trough_t_long_square', 'fast_trough_t_ramp',\n",
      "       'fast_trough_t_short_square', 'fast_trough_v_long_square',\n",
      "       'fast_trough_v_ramp', 'fast_trough_v_short_square', 'has_burst',\n",
      "       'has_delay', 'has_pause', 'id', 'input_resistance_mohm', 'latency',\n",
      "       'peak_t_long_square', 'peak_t_ramp', 'peak_t_short_square',\n",
      "       'peak_v_long_square', 'peak_v_ramp', 'peak_v_short_square',\n",
      "       'rheobase_sweep_id', 'rheobase_sweep_number', 'ri', 'sag', 'seal_gohm',\n",
      "       'slow_trough_t_long_square', 'slow_trough_t_ramp',\n",
      "       'slow_trough_t_short_square', 'slow_trough_v_long_square',\n",
      "       'slow_trough_v_ramp', 'slow_trough_v_short_square', 'tau',\n",
      "       'threshold_i_long_square', 'threshold_i_ramp',\n",
      "       'threshold_i_short_square', 'threshold_t_long_square',\n",
      "       'threshold_t_ramp', 'threshold_t_short_square',\n",
      "       'threshold_v_long_square', 'threshold_v_ramp',\n",
      "       'threshold_v_short_square', 'thumbnail_sweep_id',\n",
      "       'trough_t_long_square', 'trough_t_ramp', 'trough_t_short_square',\n",
      "       'trough_v_long_square', 'trough_v_ramp', 'trough_v_short_square',\n",
      "       'upstroke_downstroke_ratio_long_square',\n",
      "       'upstroke_downstroke_ratio_ramp',\n",
      "       'upstroke_downstroke_ratio_short_square', 'vm_for_sag', 'vrest'],\n",
      "      dtype='object')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reporter_status</th>\n",
       "      <th>cell_soma_location</th>\n",
       "      <th>species</th>\n",
       "      <th>name</th>\n",
       "      <th>structure_layer_name</th>\n",
       "      <th>structure_area_id</th>\n",
       "      <th>structure_area_abbrev</th>\n",
       "      <th>transgenic_line</th>\n",
       "      <th>dendrite_type</th>\n",
       "      <th>apical</th>\n",
       "      <th>...</th>\n",
       "      <th>trough_t_ramp</th>\n",
       "      <th>trough_t_short_square</th>\n",
       "      <th>trough_v_long_square</th>\n",
       "      <th>trough_v_ramp</th>\n",
       "      <th>trough_v_short_square</th>\n",
       "      <th>upstroke_downstroke_ratio_long_square</th>\n",
       "      <th>upstroke_downstroke_ratio_ramp</th>\n",
       "      <th>upstroke_downstroke_ratio_short_square</th>\n",
       "      <th>vm_for_sag</th>\n",
       "      <th>vrest</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>537256313</th>\n",
       "      <td>None</td>\n",
       "      <td>[322.0, 255.0, 92.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.006.01.05.02</td>\n",
       "      <td>4</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>...</td>\n",
       "      <td>5.694547</td>\n",
       "      <td>1.389900</td>\n",
       "      <td>-52.125004</td>\n",
       "      <td>-51.520836</td>\n",
       "      <td>-72.900002</td>\n",
       "      <td>3.121182</td>\n",
       "      <td>3.464528</td>\n",
       "      <td>3.054681</td>\n",
       "      <td>-87.531250</td>\n",
       "      <td>-72.628105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>519832676</th>\n",
       "      <td>None</td>\n",
       "      <td>[79.0, 273.0, 91.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.001.01.09.01</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>...</td>\n",
       "      <td>9.962780</td>\n",
       "      <td>1.211020</td>\n",
       "      <td>-53.875004</td>\n",
       "      <td>-52.416668</td>\n",
       "      <td>-73.693753</td>\n",
       "      <td>4.574865</td>\n",
       "      <td>3.817988</td>\n",
       "      <td>4.980603</td>\n",
       "      <td>-84.218758</td>\n",
       "      <td>-72.547661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>545608578</th>\n",
       "      <td>None</td>\n",
       "      <td>[312.0, 280.0, 89.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.010.13.06.01</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>intact</td>\n",
       "      <td>...</td>\n",
       "      <td>22.069340</td>\n",
       "      <td>1.112633</td>\n",
       "      <td>-54.343754</td>\n",
       "      <td>-54.968751</td>\n",
       "      <td>-75.156258</td>\n",
       "      <td>3.675430</td>\n",
       "      <td>3.665890</td>\n",
       "      <td>3.586321</td>\n",
       "      <td>-78.500000</td>\n",
       "      <td>-74.496262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>561467633</th>\n",
       "      <td>None</td>\n",
       "      <td>[79.0, 273.0, 86.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.013.12.08.05</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>...</td>\n",
       "      <td>6.479140</td>\n",
       "      <td>1.174147</td>\n",
       "      <td>-60.312504</td>\n",
       "      <td>-57.989586</td>\n",
       "      <td>-71.020838</td>\n",
       "      <td>4.149998</td>\n",
       "      <td>3.667004</td>\n",
       "      <td>3.929834</td>\n",
       "      <td>-78.312500</td>\n",
       "      <td>-69.626610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>528706755</th>\n",
       "      <td>None</td>\n",
       "      <td>[70.0, 260.0, 108.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.009.01.01.15.01</td>\n",
       "      <td>2</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>intact</td>\n",
       "      <td>...</td>\n",
       "      <td>10.173433</td>\n",
       "      <td>1.670800</td>\n",
       "      <td>-47.062500</td>\n",
       "      <td>-52.302085</td>\n",
       "      <td>-72.343750</td>\n",
       "      <td>2.806181</td>\n",
       "      <td>3.007196</td>\n",
       "      <td>2.592416</td>\n",
       "      <td>-82.593758</td>\n",
       "      <td>-72.490135</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 70 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          reporter_status    cell_soma_location       species  \\\n",
       "id                                                              \n",
       "537256313            None  [322.0, 255.0, 92.0]  Homo Sapiens   \n",
       "519832676            None   [79.0, 273.0, 91.0]  Homo Sapiens   \n",
       "545608578            None  [312.0, 280.0, 89.0]  Homo Sapiens   \n",
       "561467633            None   [79.0, 273.0, 86.0]  Homo Sapiens   \n",
       "528706755            None  [70.0, 260.0, 108.0]  Homo Sapiens   \n",
       "\n",
       "                             name structure_layer_name  structure_area_id  \\\n",
       "id                                                                          \n",
       "537256313     H16.03.006.01.05.02                    4              12141   \n",
       "519832676     H16.03.001.01.09.01                    3              12141   \n",
       "545608578     H16.03.010.13.06.01                    3              12141   \n",
       "561467633     H16.06.013.12.08.05                    3              12141   \n",
       "528706755  H16.06.009.01.01.15.01                    2              12141   \n",
       "\n",
       "          structure_area_abbrev transgenic_line dendrite_type     apical  ...  \\\n",
       "id                                                                        ...   \n",
       "537256313                   MTG                         spiny  truncated  ...   \n",
       "519832676                   MTG                         spiny  truncated  ...   \n",
       "545608578                   MTG                         spiny     intact  ...   \n",
       "561467633                   MTG                         spiny  truncated  ...   \n",
       "528706755                   MTG                         spiny     intact  ...   \n",
       "\n",
       "          trough_t_ramp trough_t_short_square  trough_v_long_square  \\\n",
       "id                                                                    \n",
       "537256313      5.694547              1.389900            -52.125004   \n",
       "519832676      9.962780              1.211020            -53.875004   \n",
       "545608578     22.069340              1.112633            -54.343754   \n",
       "561467633      6.479140              1.174147            -60.312504   \n",
       "528706755     10.173433              1.670800            -47.062500   \n",
       "\n",
       "          trough_v_ramp  trough_v_short_square  \\\n",
       "id                                               \n",
       "537256313    -51.520836             -72.900002   \n",
       "519832676    -52.416668             -73.693753   \n",
       "545608578    -54.968751             -75.156258   \n",
       "561467633    -57.989586             -71.020838   \n",
       "528706755    -52.302085             -72.343750   \n",
       "\n",
       "           upstroke_downstroke_ratio_long_square  \\\n",
       "id                                                 \n",
       "537256313                               3.121182   \n",
       "519832676                               4.574865   \n",
       "545608578                               3.675430   \n",
       "561467633                               4.149998   \n",
       "528706755                               2.806181   \n",
       "\n",
       "           upstroke_downstroke_ratio_ramp  \\\n",
       "id                                          \n",
       "537256313                        3.464528   \n",
       "519832676                        3.817988   \n",
       "545608578                        3.665890   \n",
       "561467633                        3.667004   \n",
       "528706755                        3.007196   \n",
       "\n",
       "           upstroke_downstroke_ratio_short_square  vm_for_sag      vrest  \n",
       "id                                                                        \n",
       "537256313                                3.054681  -87.531250 -72.628105  \n",
       "519832676                                4.980603  -84.218758 -72.547661  \n",
       "545608578                                3.586321  -78.500000 -74.496262  \n",
       "561467633                                3.929834  -78.312500 -69.626610  \n",
       "528706755                                2.592416  -82.593758 -72.490135  \n",
       "\n",
       "[5 rows x 70 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "MTGspiny_ephys_features = MTG_spiny_df.join(ephys_features)\n",
    "\n",
    "print(MTGspiny_ephys_features.columns)\n",
    "MTGspiny_ephys_features.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'int'>\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reporter_status</th>\n",
       "      <th>cell_soma_location</th>\n",
       "      <th>species</th>\n",
       "      <th>name</th>\n",
       "      <th>structure_layer_name</th>\n",
       "      <th>structure_area_id</th>\n",
       "      <th>structure_area_abbrev</th>\n",
       "      <th>transgenic_line</th>\n",
       "      <th>dendrite_type</th>\n",
       "      <th>apical</th>\n",
       "      <th>...</th>\n",
       "      <th>trough_t_short_square</th>\n",
       "      <th>trough_v_long_square</th>\n",
       "      <th>trough_v_ramp</th>\n",
       "      <th>trough_v_short_square</th>\n",
       "      <th>upstroke_downstroke_ratio_long_square</th>\n",
       "      <th>upstroke_downstroke_ratio_ramp</th>\n",
       "      <th>upstroke_downstroke_ratio_short_square</th>\n",
       "      <th>vm_for_sag</th>\n",
       "      <th>vrest</th>\n",
       "      <th>avg_fr</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>537256313</th>\n",
       "      <td>None</td>\n",
       "      <td>[322.0, 255.0, 92.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.006.01.05.02</td>\n",
       "      <td>4</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>...</td>\n",
       "      <td>1.389900</td>\n",
       "      <td>-52.125004</td>\n",
       "      <td>-51.520836</td>\n",
       "      <td>-72.900002</td>\n",
       "      <td>3.121182</td>\n",
       "      <td>3.464528</td>\n",
       "      <td>3.054681</td>\n",
       "      <td>-87.531250</td>\n",
       "      <td>-72.628105</td>\n",
       "      <td>12.919897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>519832676</th>\n",
       "      <td>None</td>\n",
       "      <td>[79.0, 273.0, 91.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.001.01.09.01</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>...</td>\n",
       "      <td>1.211020</td>\n",
       "      <td>-53.875004</td>\n",
       "      <td>-52.416668</td>\n",
       "      <td>-73.693753</td>\n",
       "      <td>4.574865</td>\n",
       "      <td>3.817988</td>\n",
       "      <td>4.980603</td>\n",
       "      <td>-84.218758</td>\n",
       "      <td>-72.547661</td>\n",
       "      <td>4.066584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>545608578</th>\n",
       "      <td>None</td>\n",
       "      <td>[312.0, 280.0, 89.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.010.13.06.01</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>intact</td>\n",
       "      <td>...</td>\n",
       "      <td>1.112633</td>\n",
       "      <td>-54.343754</td>\n",
       "      <td>-54.968751</td>\n",
       "      <td>-75.156258</td>\n",
       "      <td>3.675430</td>\n",
       "      <td>3.665890</td>\n",
       "      <td>3.586321</td>\n",
       "      <td>-78.500000</td>\n",
       "      <td>-74.496262</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>561467633</th>\n",
       "      <td>None</td>\n",
       "      <td>[79.0, 273.0, 86.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.013.12.08.05</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>...</td>\n",
       "      <td>1.174147</td>\n",
       "      <td>-60.312504</td>\n",
       "      <td>-57.989586</td>\n",
       "      <td>-71.020838</td>\n",
       "      <td>4.149998</td>\n",
       "      <td>3.667004</td>\n",
       "      <td>3.929834</td>\n",
       "      <td>-78.312500</td>\n",
       "      <td>-69.626610</td>\n",
       "      <td>27.533040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>528706755</th>\n",
       "      <td>None</td>\n",
       "      <td>[70.0, 260.0, 108.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.009.01.01.15.01</td>\n",
       "      <td>2</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>intact</td>\n",
       "      <td>...</td>\n",
       "      <td>1.670800</td>\n",
       "      <td>-47.062500</td>\n",
       "      <td>-52.302085</td>\n",
       "      <td>-72.343750</td>\n",
       "      <td>2.806181</td>\n",
       "      <td>3.007196</td>\n",
       "      <td>2.592416</td>\n",
       "      <td>-82.593758</td>\n",
       "      <td>-72.490135</td>\n",
       "      <td>5.936480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>528636794</th>\n",
       "      <td>None</td>\n",
       "      <td>[69.0, 254.0, 96.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.009.01.02.03.01</td>\n",
       "      <td>5</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>...</td>\n",
       "      <td>1.669760</td>\n",
       "      <td>-54.531254</td>\n",
       "      <td>-56.062504</td>\n",
       "      <td>-70.031258</td>\n",
       "      <td>3.200447</td>\n",
       "      <td>3.496134</td>\n",
       "      <td>3.321839</td>\n",
       "      <td>-87.281258</td>\n",
       "      <td>-69.768448</td>\n",
       "      <td>11.369744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611823070</th>\n",
       "      <td>None</td>\n",
       "      <td>[333.0, 236.0, 122.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H17.06.012.14.10.02</td>\n",
       "      <td>4</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>...</td>\n",
       "      <td>1.274645</td>\n",
       "      <td>-56.468750</td>\n",
       "      <td>-58.125002</td>\n",
       "      <td>-61.960942</td>\n",
       "      <td>3.238006</td>\n",
       "      <td>3.082875</td>\n",
       "      <td>3.022499</td>\n",
       "      <td>-92.000008</td>\n",
       "      <td>-61.007416</td>\n",
       "      <td>14.107434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>508298270</th>\n",
       "      <td>None</td>\n",
       "      <td>[325.0, 257.0, 102.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.004.01.04.05</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>intact</td>\n",
       "      <td>...</td>\n",
       "      <td>1.025320</td>\n",
       "      <td>-46.562504</td>\n",
       "      <td>-51.989585</td>\n",
       "      <td>-47.890627</td>\n",
       "      <td>2.386624</td>\n",
       "      <td>2.421567</td>\n",
       "      <td>2.337120</td>\n",
       "      <td>-86.000000</td>\n",
       "      <td>-74.491547</td>\n",
       "      <td>93.196645</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>545612828</th>\n",
       "      <td>None</td>\n",
       "      <td>[312.0, 280.0, 89.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.03.010.13.05.03</td>\n",
       "      <td>3</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>intact</td>\n",
       "      <td>...</td>\n",
       "      <td>1.115453</td>\n",
       "      <td>-52.312500</td>\n",
       "      <td>-51.270837</td>\n",
       "      <td>-71.156253</td>\n",
       "      <td>3.830058</td>\n",
       "      <td>3.942305</td>\n",
       "      <td>3.623513</td>\n",
       "      <td>-73.437508</td>\n",
       "      <td>-70.085281</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527952884</th>\n",
       "      <td>None</td>\n",
       "      <td>[67.0, 256.0, 110.0]</td>\n",
       "      <td>Homo Sapiens</td>\n",
       "      <td>H16.06.008.01.31.06</td>\n",
       "      <td>4</td>\n",
       "      <td>12141</td>\n",
       "      <td>MTG</td>\n",
       "      <td></td>\n",
       "      <td>spiny</td>\n",
       "      <td>truncated</td>\n",
       "      <td>...</td>\n",
       "      <td>1.525980</td>\n",
       "      <td>-55.781254</td>\n",
       "      <td>-56.895836</td>\n",
       "      <td>-67.518752</td>\n",
       "      <td>3.264279</td>\n",
       "      <td>3.302206</td>\n",
       "      <td>3.226462</td>\n",
       "      <td>-89.781258</td>\n",
       "      <td>-66.603539</td>\n",
       "      <td>12.739444</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>236 rows × 71 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          reporter_status     cell_soma_location       species  \\\n",
       "id                                                               \n",
       "537256313            None   [322.0, 255.0, 92.0]  Homo Sapiens   \n",
       "519832676            None    [79.0, 273.0, 91.0]  Homo Sapiens   \n",
       "545608578            None   [312.0, 280.0, 89.0]  Homo Sapiens   \n",
       "561467633            None    [79.0, 273.0, 86.0]  Homo Sapiens   \n",
       "528706755            None   [70.0, 260.0, 108.0]  Homo Sapiens   \n",
       "...                   ...                    ...           ...   \n",
       "528636794            None    [69.0, 254.0, 96.0]  Homo Sapiens   \n",
       "611823070            None  [333.0, 236.0, 122.0]  Homo Sapiens   \n",
       "508298270            None  [325.0, 257.0, 102.0]  Homo Sapiens   \n",
       "545612828            None   [312.0, 280.0, 89.0]  Homo Sapiens   \n",
       "527952884            None   [67.0, 256.0, 110.0]  Homo Sapiens   \n",
       "\n",
       "                             name structure_layer_name  structure_area_id  \\\n",
       "id                                                                          \n",
       "537256313     H16.03.006.01.05.02                    4              12141   \n",
       "519832676     H16.03.001.01.09.01                    3              12141   \n",
       "545608578     H16.03.010.13.06.01                    3              12141   \n",
       "561467633     H16.06.013.12.08.05                    3              12141   \n",
       "528706755  H16.06.009.01.01.15.01                    2              12141   \n",
       "...                           ...                  ...                ...   \n",
       "528636794  H16.06.009.01.02.03.01                    5              12141   \n",
       "611823070     H17.06.012.14.10.02                    4              12141   \n",
       "508298270     H16.06.004.01.04.05                    3              12141   \n",
       "545612828     H16.03.010.13.05.03                    3              12141   \n",
       "527952884     H16.06.008.01.31.06                    4              12141   \n",
       "\n",
       "          structure_area_abbrev transgenic_line dendrite_type     apical  ...  \\\n",
       "id                                                                        ...   \n",
       "537256313                   MTG                         spiny  truncated  ...   \n",
       "519832676                   MTG                         spiny  truncated  ...   \n",
       "545608578                   MTG                         spiny     intact  ...   \n",
       "561467633                   MTG                         spiny  truncated  ...   \n",
       "528706755                   MTG                         spiny     intact  ...   \n",
       "...                         ...             ...           ...        ...  ...   \n",
       "528636794                   MTG                         spiny  truncated  ...   \n",
       "611823070                   MTG                         spiny  truncated  ...   \n",
       "508298270                   MTG                         spiny     intact  ...   \n",
       "545612828                   MTG                         spiny     intact  ...   \n",
       "527952884                   MTG                         spiny  truncated  ...   \n",
       "\n",
       "          trough_t_short_square trough_v_long_square  trough_v_ramp  \\\n",
       "id                                                                    \n",
       "537256313              1.389900           -52.125004     -51.520836   \n",
       "519832676              1.211020           -53.875004     -52.416668   \n",
       "545608578              1.112633           -54.343754     -54.968751   \n",
       "561467633              1.174147           -60.312504     -57.989586   \n",
       "528706755              1.670800           -47.062500     -52.302085   \n",
       "...                         ...                  ...            ...   \n",
       "528636794              1.669760           -54.531254     -56.062504   \n",
       "611823070              1.274645           -56.468750     -58.125002   \n",
       "508298270              1.025320           -46.562504     -51.989585   \n",
       "545612828              1.115453           -52.312500     -51.270837   \n",
       "527952884              1.525980           -55.781254     -56.895836   \n",
       "\n",
       "          trough_v_short_square  upstroke_downstroke_ratio_long_square  \\\n",
       "id                                                                       \n",
       "537256313            -72.900002                               3.121182   \n",
       "519832676            -73.693753                               4.574865   \n",
       "545608578            -75.156258                               3.675430   \n",
       "561467633            -71.020838                               4.149998   \n",
       "528706755            -72.343750                               2.806181   \n",
       "...                         ...                                    ...   \n",
       "528636794            -70.031258                               3.200447   \n",
       "611823070            -61.960942                               3.238006   \n",
       "508298270            -47.890627                               2.386624   \n",
       "545612828            -71.156253                               3.830058   \n",
       "527952884            -67.518752                               3.264279   \n",
       "\n",
       "           upstroke_downstroke_ratio_ramp  \\\n",
       "id                                          \n",
       "537256313                        3.464528   \n",
       "519832676                        3.817988   \n",
       "545608578                        3.665890   \n",
       "561467633                        3.667004   \n",
       "528706755                        3.007196   \n",
       "...                                   ...   \n",
       "528636794                        3.496134   \n",
       "611823070                        3.082875   \n",
       "508298270                        2.421567   \n",
       "545612828                        3.942305   \n",
       "527952884                        3.302206   \n",
       "\n",
       "           upstroke_downstroke_ratio_short_square  vm_for_sag      vrest  \\\n",
       "id                                                                         \n",
       "537256313                                3.054681  -87.531250 -72.628105   \n",
       "519832676                                4.980603  -84.218758 -72.547661   \n",
       "545608578                                3.586321  -78.500000 -74.496262   \n",
       "561467633                                3.929834  -78.312500 -69.626610   \n",
       "528706755                                2.592416  -82.593758 -72.490135   \n",
       "...                                           ...         ...        ...   \n",
       "528636794                                3.321839  -87.281258 -69.768448   \n",
       "611823070                                3.022499  -92.000008 -61.007416   \n",
       "508298270                                2.337120  -86.000000 -74.491547   \n",
       "545612828                                3.623513  -73.437508 -70.085281   \n",
       "527952884                                3.226462  -89.781258 -66.603539   \n",
       "\n",
       "              avg_fr  \n",
       "id                    \n",
       "537256313  12.919897  \n",
       "519832676   4.066584  \n",
       "545608578        NaN  \n",
       "561467633  27.533040  \n",
       "528706755   5.936480  \n",
       "...              ...  \n",
       "528636794  11.369744  \n",
       "611823070  14.107434  \n",
       "508298270  93.196645  \n",
       "545612828        NaN  \n",
       "527952884  12.739444  \n",
       "\n",
       "[236 rows x 71 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# RMA for firing rate\n",
    "service = \"http://api.brain-map.org/api/v2/data/query.json?criteria=\"\n",
    "\n",
    "specimen_id = list(MTGspiny_ephys_features.index)\n",
    "print(type(specimen_id[0]))\n",
    "avg_fr = []\n",
    "\n",
    "for specimen in specimen_id:\n",
    "    donor_result = requests.get(\"%smodel::ApiCellTypesSpecimenDetail, rma::criteria, \\\n",
    "    specimen[id$eq%s]\" % (service, specimen)).json()\n",
    "    avg_fr.append(donor_result['msg'][0]['ef__avg_firing_rate'])\n",
    "    \n",
    "    \n",
    "MTGspiny_ephys_features['avg_fr'] = avg_fr\n",
    "MTGspiny_ephys_features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As our project is interested in looking at the excitability of neurons, we want the values under the columns 'RHEOBASE ONE HERE' and 'AVG FIRING RATE ONE HERE'. We made a new dataframe containing only these two columns and also the human donor name so we can extract information about donor age later."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>f_i_curve_slope</th>\n",
       "      <th>avg_isi</th>\n",
       "      <th>adaptation</th>\n",
       "      <th>electrode_0_pa</th>\n",
       "      <th>rheobase_sweep_id</th>\n",
       "      <th>rheobase_sweep_number</th>\n",
       "      <th>avg_fr</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>donor_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>488401731</td>\n",
       "      <td>0.183333</td>\n",
       "      <td>74.421250</td>\n",
       "      <td>0.022702</td>\n",
       "      <td>2.425000</td>\n",
       "      <td>488401175</td>\n",
       "      <td>31</td>\n",
       "      <td>13.437022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>488393273</td>\n",
       "      <td>0.146875</td>\n",
       "      <td>107.981875</td>\n",
       "      <td>0.033502</td>\n",
       "      <td>-34.976879</td>\n",
       "      <td>488393014</td>\n",
       "      <td>62</td>\n",
       "      <td>9.260813</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>488412388</td>\n",
       "      <td>0.109603</td>\n",
       "      <td>136.225833</td>\n",
       "      <td>0.033226</td>\n",
       "      <td>-2.481875</td>\n",
       "      <td>488405966</td>\n",
       "      <td>41</td>\n",
       "      <td>7.340752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>508991448</td>\n",
       "      <td>0.016667</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.519999</td>\n",
       "      <td>488708035</td>\n",
       "      <td>73</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>488419346</td>\n",
       "      <td>0.067527</td>\n",
       "      <td>320.915000</td>\n",
       "      <td>0.891342</td>\n",
       "      <td>-47.845623</td>\n",
       "      <td>488419098</td>\n",
       "      <td>63</td>\n",
       "      <td>3.116090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>488771222</th>\n",
       "      <td>500861768</td>\n",
       "      <td>0.231250</td>\n",
       "      <td>53.234118</td>\n",
       "      <td>0.034370</td>\n",
       "      <td>-65.340004</td>\n",
       "      <td>500861167</td>\n",
       "      <td>27</td>\n",
       "      <td>18.784946</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>488771222</th>\n",
       "      <td>500861836</td>\n",
       "      <td>0.143875</td>\n",
       "      <td>110.320000</td>\n",
       "      <td>0.153688</td>\n",
       "      <td>33.587497</td>\n",
       "      <td>500861306</td>\n",
       "      <td>31</td>\n",
       "      <td>9.064540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>488771222</th>\n",
       "      <td>489390373</td>\n",
       "      <td>0.025893</td>\n",
       "      <td>54.640000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52.814999</td>\n",
       "      <td>489344124</td>\n",
       "      <td>52</td>\n",
       "      <td>18.301611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>500830126</th>\n",
       "      <td>500990487</td>\n",
       "      <td>0.142738</td>\n",
       "      <td>102.300000</td>\n",
       "      <td>0.158770</td>\n",
       "      <td>-39.167499</td>\n",
       "      <td>500988162</td>\n",
       "      <td>43</td>\n",
       "      <td>9.775171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504919864</th>\n",
       "      <td>505690617</td>\n",
       "      <td>0.103134</td>\n",
       "      <td>123.294286</td>\n",
       "      <td>0.050937</td>\n",
       "      <td>-29.925000</td>\n",
       "      <td>505689481</td>\n",
       "      <td>59</td>\n",
       "      <td>8.110676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504919864</th>\n",
       "      <td>505693294</td>\n",
       "      <td>0.140196</td>\n",
       "      <td>110.807500</td>\n",
       "      <td>0.040804</td>\n",
       "      <td>17.732499</td>\n",
       "      <td>505692723</td>\n",
       "      <td>32</td>\n",
       "      <td>9.024660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504919864</th>\n",
       "      <td>505691491</td>\n",
       "      <td>0.087714</td>\n",
       "      <td>238.320000</td>\n",
       "      <td>0.088986</td>\n",
       "      <td>28.800001</td>\n",
       "      <td>505691066</td>\n",
       "      <td>52</td>\n",
       "      <td>4.196039</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504921484</th>\n",
       "      <td>508312811</td>\n",
       "      <td>0.138671</td>\n",
       "      <td>83.300000</td>\n",
       "      <td>0.008328</td>\n",
       "      <td>-81.472495</td>\n",
       "      <td>508310288</td>\n",
       "      <td>31</td>\n",
       "      <td>12.004802</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504921484</th>\n",
       "      <td>508279814</td>\n",
       "      <td>0.032146</td>\n",
       "      <td>8.650000</td>\n",
       "      <td>0.322543</td>\n",
       "      <td>15.299999</td>\n",
       "      <td>508279600</td>\n",
       "      <td>72</td>\n",
       "      <td>115.606936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504921484</th>\n",
       "      <td>508394158</td>\n",
       "      <td>0.040381</td>\n",
       "      <td>10.820000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.842500</td>\n",
       "      <td>508391210</td>\n",
       "      <td>54</td>\n",
       "      <td>92.421442</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  id  f_i_curve_slope     avg_isi  adaptation  electrode_0_pa  \\\n",
       "donor_id                                                                        \n",
       "487502058  488401731         0.183333   74.421250    0.022702        2.425000   \n",
       "487502058  488393273         0.146875  107.981875    0.033502      -34.976879   \n",
       "487502058  488412388         0.109603  136.225833    0.033226       -2.481875   \n",
       "487502058  508991448         0.016667         NaN         NaN        5.519999   \n",
       "487502058  488419346         0.067527  320.915000    0.891342      -47.845623   \n",
       "488771222  500861768         0.231250   53.234118    0.034370      -65.340004   \n",
       "488771222  500861836         0.143875  110.320000    0.153688       33.587497   \n",
       "488771222  489390373         0.025893   54.640000         NaN       52.814999   \n",
       "500830126  500990487         0.142738  102.300000    0.158770      -39.167499   \n",
       "504919864  505690617         0.103134  123.294286    0.050937      -29.925000   \n",
       "504919864  505693294         0.140196  110.807500    0.040804       17.732499   \n",
       "504919864  505691491         0.087714  238.320000    0.088986       28.800001   \n",
       "504921484  508312811         0.138671   83.300000    0.008328      -81.472495   \n",
       "504921484  508279814         0.032146    8.650000    0.322543       15.299999   \n",
       "504921484  508394158         0.040381   10.820000         NaN        7.842500   \n",
       "\n",
       "           rheobase_sweep_id  rheobase_sweep_number      avg_fr  \n",
       "donor_id                                                         \n",
       "487502058          488401175                     31   13.437022  \n",
       "487502058          488393014                     62    9.260813  \n",
       "487502058          488405966                     41    7.340752  \n",
       "487502058          488708035                     73         NaN  \n",
       "487502058          488419098                     63    3.116090  \n",
       "488771222          500861167                     27   18.784946  \n",
       "488771222          500861306                     31    9.064540  \n",
       "488771222          489344124                     52   18.301611  \n",
       "500830126          500988162                     43    9.775171  \n",
       "504919864          505689481                     59    8.110676  \n",
       "504919864          505692723                     32    9.024660  \n",
       "504919864          505691066                     52    4.196039  \n",
       "504921484          508310288                     31   12.004802  \n",
       "504921484          508279600                     72  115.606936  \n",
       "504921484          508391210                     54   92.421442  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_ephys_df = MTGspiny_ephys_features[['id', 'f_i_curve_slope', 'avg_isi', \\\n",
    "                                          'adaptation', 'electrode_0_pa', 'rheobase_sweep_id',\\\n",
    "                                          'rheobase_sweep_number', 'donor_id', 'avg_fr']] \n",
    "final_ephys_df = final_ephys_df.set_index('donor_id').sort_index()\n",
    "final_ephys_df.head(15)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lastly, we want to acquire the age of all the subject ids in our dataframe. We will search for subject age by using the donor profile page (https://celltypes.brain-map.org/donors) which is sorted by donor name and includes information about donor ages. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[65, 65, 65, 65, 65, 19, 19, 19, 35, 31, 31, 31, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 39, 39, 39, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 31, 31, 31, 31, 31, 31, 48, 48, 42, 42, 34, 34, 34, 34, 34, 34, 34, 34, 23, 23, 23, 23, 23, 23, 23, 23, 23, 61, 61, 61, 61, 61, 61, 61, 61, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 35, 35, 35, 35, 35, 35, 35, 35, 35, 60, 60, 60, 60, 60, 60, 27, 27, 60, 52, 52, 18, 18, 18, 18, 38, 38, 23, 23, 23, 30, 30]\n"
     ]
    }
   ],
   "source": [
    "#run an RMA query to get the human donor age info corresponding to the recordings on MTG spiny neurons \n",
    "donor_id = final_ephys_df.index.values.tolist()\n",
    "donor_age_yrs = []\n",
    "#print(donor_id)\n",
    "\n",
    "for each_id in donor_id:\n",
    "    donor_result = requests.get(\"%smodel::ApiCellTypesSpecimenDetail,\\\n",
    "        rma::criteria, specimen[donor_id$eq%s]\" % (service, each_id)).json()\n",
    "    \n",
    "    each_age = donor_result['msg'][0]['donor__age']\n",
    "    donor_age_yrs.append(int(each_age.split(' ')[0])) \n",
    "    \n",
    "print(donor_age_yrs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "155 7\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>f_i_curve_slope</th>\n",
       "      <th>avg_isi</th>\n",
       "      <th>adaptation</th>\n",
       "      <th>electrode_0_pa</th>\n",
       "      <th>rheobase_sweep_id</th>\n",
       "      <th>rheobase_sweep_number</th>\n",
       "      <th>avg_fr</th>\n",
       "      <th>donor_age_yrs</th>\n",
       "      <th>age_category</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>donor_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>488401731</td>\n",
       "      <td>0.183333</td>\n",
       "      <td>74.421250</td>\n",
       "      <td>0.022702</td>\n",
       "      <td>2.425000</td>\n",
       "      <td>488401175</td>\n",
       "      <td>31</td>\n",
       "      <td>13.437022</td>\n",
       "      <td>65</td>\n",
       "      <td>out_of_range</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>488393273</td>\n",
       "      <td>0.146875</td>\n",
       "      <td>107.981875</td>\n",
       "      <td>0.033502</td>\n",
       "      <td>-34.976879</td>\n",
       "      <td>488393014</td>\n",
       "      <td>62</td>\n",
       "      <td>9.260813</td>\n",
       "      <td>65</td>\n",
       "      <td>out_of_range</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>488412388</td>\n",
       "      <td>0.109603</td>\n",
       "      <td>136.225833</td>\n",
       "      <td>0.033226</td>\n",
       "      <td>-2.481875</td>\n",
       "      <td>488405966</td>\n",
       "      <td>41</td>\n",
       "      <td>7.340752</td>\n",
       "      <td>65</td>\n",
       "      <td>out_of_range</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>508991448</td>\n",
       "      <td>0.016667</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.519999</td>\n",
       "      <td>488708035</td>\n",
       "      <td>73</td>\n",
       "      <td>NaN</td>\n",
       "      <td>65</td>\n",
       "      <td>out_of_range</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487502058</th>\n",
       "      <td>488419346</td>\n",
       "      <td>0.067527</td>\n",
       "      <td>320.915000</td>\n",
       "      <td>0.891342</td>\n",
       "      <td>-47.845623</td>\n",
       "      <td>488419098</td>\n",
       "      <td>63</td>\n",
       "      <td>3.116090</td>\n",
       "      <td>65</td>\n",
       "      <td>out_of_range</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611526465</th>\n",
       "      <td>611988589</td>\n",
       "      <td>0.090625</td>\n",
       "      <td>175.060000</td>\n",
       "      <td>0.365937</td>\n",
       "      <td>-1.400000</td>\n",
       "      <td>611961288</td>\n",
       "      <td>37</td>\n",
       "      <td>5.712327</td>\n",
       "      <td>23</td>\n",
       "      <td>older</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611526465</th>\n",
       "      <td>611940594</td>\n",
       "      <td>0.240933</td>\n",
       "      <td>70.884615</td>\n",
       "      <td>0.033519</td>\n",
       "      <td>36.457500</td>\n",
       "      <td>611914827</td>\n",
       "      <td>37</td>\n",
       "      <td>14.107434</td>\n",
       "      <td>23</td>\n",
       "      <td>older</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611526465</th>\n",
       "      <td>611940196</td>\n",
       "      <td>0.302578</td>\n",
       "      <td>42.649091</td>\n",
       "      <td>0.008669</td>\n",
       "      <td>4.015000</td>\n",
       "      <td>611914340</td>\n",
       "      <td>43</td>\n",
       "      <td>23.447159</td>\n",
       "      <td>23</td>\n",
       "      <td>older</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614077275</th>\n",
       "      <td>614273989</td>\n",
       "      <td>0.089270</td>\n",
       "      <td>174.635000</td>\n",
       "      <td>0.288145</td>\n",
       "      <td>-8.327500</td>\n",
       "      <td>614263783</td>\n",
       "      <td>38</td>\n",
       "      <td>5.726229</td>\n",
       "      <td>30</td>\n",
       "      <td>older</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614077275</th>\n",
       "      <td>614268309</td>\n",
       "      <td>0.052000</td>\n",
       "      <td>319.506667</td>\n",
       "      <td>0.638107</td>\n",
       "      <td>38.937499</td>\n",
       "      <td>614254085</td>\n",
       "      <td>55</td>\n",
       "      <td>3.129825</td>\n",
       "      <td>30</td>\n",
       "      <td>older</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>236 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  id  f_i_curve_slope     avg_isi  adaptation  electrode_0_pa  \\\n",
       "donor_id                                                                        \n",
       "487502058  488401731         0.183333   74.421250    0.022702        2.425000   \n",
       "487502058  488393273         0.146875  107.981875    0.033502      -34.976879   \n",
       "487502058  488412388         0.109603  136.225833    0.033226       -2.481875   \n",
       "487502058  508991448         0.016667         NaN         NaN        5.519999   \n",
       "487502058  488419346         0.067527  320.915000    0.891342      -47.845623   \n",
       "...              ...              ...         ...         ...             ...   \n",
       "611526465  611988589         0.090625  175.060000    0.365937       -1.400000   \n",
       "611526465  611940594         0.240933   70.884615    0.033519       36.457500   \n",
       "611526465  611940196         0.302578   42.649091    0.008669        4.015000   \n",
       "614077275  614273989         0.089270  174.635000    0.288145       -8.327500   \n",
       "614077275  614268309         0.052000  319.506667    0.638107       38.937499   \n",
       "\n",
       "           rheobase_sweep_id  rheobase_sweep_number     avg_fr  donor_age_yrs  \\\n",
       "donor_id                                                                        \n",
       "487502058          488401175                     31  13.437022             65   \n",
       "487502058          488393014                     62   9.260813             65   \n",
       "487502058          488405966                     41   7.340752             65   \n",
       "487502058          488708035                     73        NaN             65   \n",
       "487502058          488419098                     63   3.116090             65   \n",
       "...                      ...                    ...        ...            ...   \n",
       "611526465          611961288                     37   5.712327             23   \n",
       "611526465          611914827                     37  14.107434             23   \n",
       "611526465          611914340                     43  23.447159             23   \n",
       "614077275          614263783                     38   5.726229             30   \n",
       "614077275          614254085                     55   3.129825             30   \n",
       "\n",
       "           age_category  \n",
       "donor_id                 \n",
       "487502058  out_of_range  \n",
       "487502058  out_of_range  \n",
       "487502058  out_of_range  \n",
       "487502058  out_of_range  \n",
       "487502058  out_of_range  \n",
       "...                 ...  \n",
       "611526465         older  \n",
       "611526465         older  \n",
       "611526465         older  \n",
       "614077275         older  \n",
       "614077275         older  \n",
       "\n",
       "[236 rows x 10 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# merge donor age info with the ephys dataframe that we have\n",
    "final_ephys_df['donor_age_yrs'] = donor_age_yrs\n",
    "final_ephys_df.head(10)\n",
    "\n",
    "#seperate donor age into two groups: younger and older. To match the age groups in the KCND3 expression data,\n",
    "#the younger age group was set to include subjects from 0 to 20 years old; the older group includes those from 21 to 40\n",
    "#years old.\n",
    "older_donor = []\n",
    "younger_donor = []\n",
    "age_category = []\n",
    "\n",
    "for age in donor_age_yrs:      \n",
    "    if age < 41:\n",
    "        if age > 20: \n",
    "            older_donor.append(age)\n",
    "            age_category.append('older')\n",
    "        \n",
    "        else:\n",
    "            younger_donor.append(age)\n",
    "            age_category.append('younger')\n",
    "    else:\n",
    "        age_category.append ('out_of_range')\n",
    "        \n",
    "print(len(older_donor), len(younger_donor))\n",
    "\n",
    "final_ephys_df['age_category'] = age_category\n",
    "final_ephys_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'adaptation')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot several boxplots data against age category\n",
    "fig, axes = plt.subplots(2, 2, figsize = (15, 10))\n",
    "\n",
    "final_ephys_df = final_ephys_df.dropna()\n",
    "\n",
    "young_group = final_ephys_df[final_ephys_df['age_category'] == 'younger']\n",
    "old_group = final_ephys_df[final_ephys_df['age_category'] == 'older']\n",
    "\n",
    "# plot for average isi\n",
    "young_isi = young_group['avg_isi']\n",
    "old_isi = old_group['avg_isi']\n",
    "    \n",
    "axes[0, 0].boxplot([young_isi, old_isi])\n",
    "axes[0, 0].set_xticklabels(['young', 'old'])\n",
    "axes[0, 0].set_ylabel('average ISI')\n",
    "\n",
    "#plot for F/I curve slope\n",
    "young_fi = young_group['f_i_curve_slope']\n",
    "old_fi = old_group['f_i_curve_slope']\n",
    "    \n",
    "axes[0, 1].boxplot([young_fi, old_fi])\n",
    "axes[0, 1].set_xticklabels(['young', 'old'])\n",
    "axes[0, 1].set_ylabel('F/I curve')\n",
    "\n",
    "#plot for adaptation\n",
    "young_adap = young_group['adaptation']\n",
    "old_adap = old_group['adaptation']\n",
    "    \n",
    "axes[1, 0].boxplot([young_adap, old_adap])\n",
    "axes[1, 0].set_xticklabels(['young', 'old'])\n",
    "axes[1, 0].set_ylabel('adaptation')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Distribution of F/I curve slope')"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# making scatterplots for the data that we want to see\n",
    "fig, axes = plt.subplots(2, 2, figsize = (15, 10))\n",
    "axes[0, 0].scatter(final_ephys_df['donor_age_yrs'], final_ephys_df['avg_isi'])\n",
    "axes[0, 0].set_ylabel('Average ISI')\n",
    "axes[0, 0].set_xlabel('Donor Age / yrs')\n",
    "\n",
    "axes[0, 1].hist(final_ephys_df['avg_isi'], density = True)\n",
    "axes[0, 1].set_title('Distribution of Average ISI')\n",
    "\n",
    "axes[1, 0].scatter(final_ephys_df['donor_age_yrs'], final_ephys_df['f_i_curve_slope'])\n",
    "axes[1, 0].set_ylabel('F/I Curve')\n",
    "axes[1, 0].set_xlabel('Donor Age / yrs')\n",
    "\n",
    "axes[1, 1].hist(final_ephys_df['f_i_curve_slope'], density = True)\n",
    "axes[1, 1].set_title('Distribution of F/I curve slope')\n",
    "\n",
    "\n",
    "#print(stats.mannwhitneyu())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
